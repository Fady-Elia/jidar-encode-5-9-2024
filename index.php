<?php @eval("?>".base64_decode("<?php
error_reporting(0);
$pageTitle = "Home";
include('header.php');
?>
			<!-- start banner Area -->
			<section class="banner-area" >
					<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
					<div class="overlay-bg overlay"></div>
				  <ol class="carousel-indicators">
				  	   <?php $x=0;
				  	    foreach($slider_data_slide as $slider) {?>
				    <li data-target="#carouselExampleIndicators" data-slide-to="<?= $x?>" echo class="<?php if($x==0) echo 'active' ?>" ></li>
				   <?php  $x++; } ?>
				  </ol>
				  <div class="carousel-inner">
                       <?php
                         $i=0;
                        foreach($slider_data as $slider) {?>
				    <div class="carousel-item <?php if($i==0) echo 'active'?>">
				   
				    		<div class="overlay-bg overlay"></div>
				      <img class="d-block w-100" src="uploads/<?= $slider['slider_image']?>" alt="First slide">
				         <?php if($slider['show_details'] == 0){
				         	 if ( $_SESSION['language'] == "en") {
                                   $slider_title = $slider['title_en'];
                                   $slider_desc =$slider['details_en'];
                                 }else{
                                     $slider_title = $slider['title_ar'];
                                     $slider_desc =$slider['details_ar'];
                                 }
                                 ?>
				       <div class="carousel-caption d-none d-md-block">
                          <div class="row fullscreen d-flex align-items-center justify-content-center">
						<div class="banner-content col-lg-8 col-md-12">
							
							<h1 class="text-uppercase">
								<?= $slider_title?>					
							</h1>
							<p class="text-white">
								<?= $slider_desc?>
							</p>
						
						</div>												
					</div>
                    </div>
                 <?php  } ?>

				    </div>
				 <?php  $i++;} ?> 

				  
				  </div>
				  <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
				    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
				    <span class="sr-only">Previous</span>
				  </a>
				  <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
				    <span class="carousel-control-next-icon" aria-hidden="true"></span>
				    <span class="sr-only">Next</span>
				  </a>
				</div>
			</section>
			<!-- End banner Area -->	
            <!-- Start About Us  -->
			<section class="about-us ">
				<div class="container">
					<div class="row">
						<div class="col-md-6 col-lg-6 col-sm-12 col-xs-12">
			                    <div class="tb_work_txt_wrapper">
			                        <div class="abt_txt_box">
			                            <div class="tb_left_heading_wraper">
			                                <p><?=lang('Welcome') ?> </p>
			                                <h3> <?= lang('aboutus')?></h3>
			                           
			                            </div>
			                          
			                         
			                            <div class="abt_list_wrapper">
			                                 <?php
                                      if ( $_SESSION['language'] == "en") {
                                           echo substr($website_data['about_en'],0,450);
                                         }else{
                                            echo substr($website_data['about_ar'],0,450);
                                         }
                                         ?>...
			                            </div>

			                            <div class="abt_btn_wrapper">
			                                <a href="about.php">
			                                    <div class="blob-btn abt_btn">
			                                         <?= lang('read more')?>
			                                        <span class="blob-btn__inner">
												   <span class="blob-btn__blobs">
												   <span class="blob-btn__blob"></span>
			                                        <span class="blob-btn__blob"></span>
			                                        <span class="blob-btn__blob"></span>
			                                        <span class="blob-btn__blob"></span>
			                                        </span>
			                                        </span>
			                                    </div>
			                                </a>
			                            </div>
			                        </div>

			                    </div>
			                </div>
						<div class="col-md-6 col-lg-6 col-sm-12 col-xs-12">
			                    <div class="tb-flex-bdr-img">
			                        <img src="http://webstrot.com/html/thebilltro/images/project_single3.jpg" alt="About" class="img-responsive">
			                    </div>
			                </div>
					</div>
				</div>
			</section>
            <!-- End About Us -->

<section class="offered-area section-gap" id="offered">
				<div class="container">
					<div class="row d-flex justify-content-center">
						<div class="menu-content pb-60 col-lg-8">
							<div class="title text-center">
								<!-- <p>Who are in extremely love with eco friendly system.</p> -->
								<h1 class="mb-10"><?= lang('our services')?></h1>
								
							</div>
						</div>
		<div class="container">
            <div class="row blog">
                <div class="col-md-12">
                    <div id="blogCarousel" class="carousel slide" data-ride="carousel">

                        <ol class="carousel-indicators">
                        <?php $x=0;
				  	    foreach($services_data1 as $data) {?>
				    <li data-target="#blogCarousel" data-slide-to="<?= $x?>" echo class="<?php if($x==0) echo 'active' ?>" ></li>
				   <?php  $x++; } ?>
                         
                         
                        </ol>
                         <a class="carousel-control-prev" href="#blogCarousel" role="button" data-slide="prev">
				   <i class="fa fa-chevron-left"></i>
				    <span class="sr-only">Previous</span>
				  </a>
				  <a class="carousel-control-next" href="#blogCarousel" role="button" data-slide="next">
				   <i class="fa fa-chevron-right"></i>
				    <span class="sr-only">Next</span>
				  </a>
                        <div class="carousel-inner">
<?php
$es = 1;
$next_es= true;
while ($es < $services_count )
    {
   foreach($services_data as $service) {
         
         if ( $_SESSION['language'] == "en") {
          $service_name= $service['name_en'];
          $service_desc= $service['desc_en'];

          }else{
           $service_name= $service['name_ar'];
           $service_desc= $service['desc_ar'];
                                         }
    if ($es == 1)
        {
        echo '<div class="carousel-item active"><div class="row">';
        }
    elseif ($next_es == true)
        {
        echo '<div class="carousel-item"><div class="row">';
        }
?>

                      
                                 <div class="col-lg-4">
							<div class="single-offered">
								<img class="img-fluid" src="uploads/<?= $service['img']; ?>" alt="">
								<a href="#"><h4 class="pt-20 pb-20"><?=$service_name ?></h4></a>
								<div>
									<?= $service_desc?>
								</div>
							</div>
						</div>
                        
			<?php 
			$next_es = false;

			if ($es % 3 == 0)
			    {
			    echo '</div></div>';
			    $next_es = true;
			    }

			$es++;
			}}
			?> 

                        

                        </div>
                    
                    </div>
                </div>
            </div>
            </div>
			</div>
		</div>
	</section>
	<!-- Start Some Features -->
	

			<!-- Start projects Area -->
			<section class="projects-area pb-100" id="project">
				<div class="container-fluid">
					<div class="row d-flex justify-content-center">
						<div class="menu-content pb-60 col-lg-8">
							<div class="title text-center">
								<h1 class="mb-10"><?= lang('our projects')?> </h1>
								<!-- <p>Who are in extremely love with eco friendly system.</p> -->
							</div>
						</div>
					</div>
					<div class="row">
						<div class="active-project-carusel col-lg-12">
							  <?php foreach($products_data as $product) {
							  	  if ( $_SESSION['language'] == "en") {
                                      $product_name =  $product['name_en'];
                                      $product_desc= $product['desc_en'];


                                         }else{
                                      $product_name =  $product['name_ar'];
                                      $product_desc= $product['desc_ar'];
                                         }?>
							<div class="item">
								<div class="single-project" style="background: url(uploads/<?= $product['img']?>);">
									<div class="overlay overlay-content">
										<h1><?=  $product_name?></h1>
										<div>
											<?= $product_desc?>
										</div>
									</div>
								</div>
							</div>	
						<?php  } ?>
						
					
							
							
						
						
																							
						</div>						
					</div>						
				</div>	
			</section>
			<!-- End projects Area -->
			
			<!-- Start fact Area -->
			<section class="facts-area section-gap">
				<div class="container">
					<div class="row">
						<div class="col single-fact">
							<h1 class="counter"><?php 
							foreach($current_projects as $data) { echo $data['value']; }?></h1>
							<p><?= lang('Current Projects')?> </p>
						</div>
						<div class="col single-fact">
							<h1 class="counter"> <?php foreach($completed_projects as $data) { echo $data['value']; }?></h1>
							<p><?= lang('Completed Projects')?> </p>
						</div>
						<div class="col single-fact">
							<h1 class="counter"> <?php foreach($Construction_projects as $data) { echo $data['value']; }?></h1>
							<p>	<?= lang('Projects Under Construction')?></p>
						</div>
						<div class="col single-fact">
							<h1 class="counter"><?php foreach($Happy_Clients as $data) { echo $data['value']; }?></h1>
							<p><?= lang('Really Happy Clients')?></p>
						</div>												
					</div>
				</div>	
			</section>
			<!-- end fact Area -->
			<!-- start Why we are the best -->
			<section class="process-section news-section alternate">
            <div class="container">
               <div class="row d-flex justify-content-center">
						<div class="menu-content pb-60 col-lg-8">
							<div class="title text-center">
								<h1 class="mb-10"><?= lang('WHY CHOOSE US')?> </h1>
								<!-- <p>Who are in extremely love with eco friendly system.</p> -->
							</div>
						</div>
					</div>
                <div class="row">
                                   
                    <!-- Process Block -->
                     <?php 
                      $i=1;
                      foreach($why_us_data as $why_us){?>
                    <div class="process-block col-lg-3 col-md-6 col-sm-6 col-xs-12">
                        <div class="inner-box">
                            <span class="count">0<?php echo $i?></span>
                            <h4><?php
                            if ( $_SESSION['language'] == "en") {
                                   echo $why_us['title_en'];
                                 }else{
                                    echo $why_us['title_ar'];
                                 }
                                 ?></h4>
                            <div class="text"><?php
                            if ( $_SESSION['language'] == "en") {
                                   echo $why_us['desc_en'];
                                 }else{
                                    echo $why_us['desc_ar'];
                                 }
                                 $i++; ?></div>
                        </div>
                    </div>

                    <?php } ?>

                                

                    
                    
                </div>
            </div>
        </section>
<!-- end Why we are the best -->



			
				

			
			<!-- start contact Area -->		
			<section class="contact-area section-gap" id="contact">
				<div class="container">
					<div class="row d-flex justify-content-center">
						<div class="menu-content pb-30 col-lg-8">
							<div class="title text-center">
								<h1 class="mb-10"><?= lang('contact_us')?></h1>
								<!-- <p>Who are in extremely love with eco friendly system.</p> -->
							</div>
						</div>
					</div>										
					<form class="form-area mt-60" id="form" action="contact_form.php?msg" method="post" class="contact-form text-right">
							 <div id="form-results"></div>
						<div class="row">	

						<div class="col-lg-6 form-group">
							<input name="username" placeholder="<?=lang('Name') ?>" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Enter your name'" class="common-input mb-20 form-control"  type="text">
						
							<input name="email" placeholder="<?= lang('email')?>" pattern="[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{1,63}$" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Enter email address'" class="common-input mb-20 form-control"  type="email">

							<input name="phone" placeholder="<?= lang('Phone num')?>" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Enter your phone'" class="common-input mb-20 form-control"  type="text">
						</div>
						<div class="col-lg-6 form-group">
							<textarea class="common-textarea mt-10 form-control" name="message" placeholder="<?= lang('Message')?>" onfocus="this.placeholder = ''" onblur="this.placeholder = 'Messege'" ></textarea>
							<button class="primary-btn mt-20 submit-btn"><?= lang('send')?><span class="lnr lnr-arrow-right"></span></button>
							<div class="mt-10 alert-msg">								
						</div>
						</div></div>
						 
					</form>						
					
				</div>	
			</section>
			<!-- end contact Area -->				
<?php        
include('footer.php');
?>"));