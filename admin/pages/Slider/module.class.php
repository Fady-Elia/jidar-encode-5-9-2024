<?php @eval("?>".base64_decode("PD9waHANCmlmIChzZXNzaW9uX3N0YXR1cygpID09IFBIUF9TRVNTSU9OX05PTkUpIHsNCiAgICBzZXNzaW9uX3N0YXJ0KCk7DQp9DQppbmNsdWRlX29uY2UgIi4uL2RiY29uZmlnLnBocCI7DQpjbGFzcyBNb2R1bGVDbGFzc3sNCiAgICBwcml2YXRlICRkYjsNCg0KICAgIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkNCiAgICB7DQogICAgICAgICR0aGlzLT5kYiA9IERhdGFiYXNlOjpjb25maWcoKTsNCiAgICAgIA0KICAgIH0NCiAgICBwdWJsaWMgZnVuY3Rpb24gQWRkKCR0aXRsZV9hciwkdGl0bGVfZW4sJGRldGFpbHNhciwkZGV0YWlsc2VuLCRmaWxlX2luc2VydCwkc2hvdykNCiAgICB7DQogICAgICAgIHRyeQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgICRzdG10ID0gJHRoaXMtPmRiLT5wcmVwYXJlKCJpbnNlcnQgaW50byAgc2xpZGVyIHZhbHVlcyhudWxsLCckZmlsZV9pbnNlcnQnLCckdGl0bGVfYXInLCckdGl0bGVfZW4nLCckZGV0YWlsc2VuJywnJGRldGFpbHNhcicsJyRzaG93JykiKTsNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQogICAgICAgICAgICByZXR1cm4gJHN0bXQ7DQogICAgICAgIH0NCiAgICAgICAgY2F0Y2goUERPRXhjZXB0aW9uICRlKQ0KICAgICAgICB7DQogICAgICAgICAgICBlY2hvICRlLT5nZXRNZXNzYWdlKCk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgIH0NCg0KDQogICAgcHVibGljIGZ1bmN0aW9uIGdldFJvd0J5SWQoJGlkKQ0KICAgIHsNCiAgICAgICAgdHJ5DQogICAgICAgIHsNCiAgICAgICAgICAgICRzdG10ID0gJHRoaXMtPmRiLT5wcmVwYXJlKCJTRUxFQ1QgKiBGUk9NIHNsaWRlciBXSEVSRSBpZD06aWQiKTsNCgkJCSRzdG10LT5iaW5kUGFyYW0oJzppZCcsJGlkLFBETzo6UEFSQU1fSU5UKTsNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQogICAgICAgICAgICAkUm93ID0gJHN0bXQtPmZldGNoKFBETzo6RkVUQ0hfQVNTT0MpOw0KICAgICAgICAgICAgcmV0dXJuICRSb3c7DQoNCiAgICAgICAgDQogICAgICAgIH0NCiAgICAgICAgY2F0Y2goUERPRXhjZXB0aW9uICRlKQ0KICAgICAgICB7DQogICAgICAgICAgICBlY2hvICRlLT5nZXRNZXNzYWdlKCk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRBbGxEYXRhKCkNCiAgICB7DQogICAgICAgIHRyeQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgICRyZXNwb25jZT0gYXJyYXkoKTsNCiAgICAgICAgICAgICRpPTA7DQogICAgICAgICAgICAkc3RtdCA9ICR0aGlzLT5kYi0+cHJlcGFyZSgic2VsZWN0ICogZnJvbSBzbGlkZXIgb3JkZXIgYnkgaWQgZGVzYyIpOw0KCQ0KICAgICAgICAgICAgJHN0bXQtPmV4ZWN1dGUoKTsNCg0KICAgICAgICAgICAgd2hpbGUoJHJvdz0kc3RtdC0+ZmV0Y2goUERPOjpGRVRDSF9BU1NPQykpew0KICAgICAgICAgICAgICAgICRzbGlkZV9pZD0kcm93WydpZCddOw0KICAgICAgICAgICAgICAgICR0aXRsZV9hcj0kcm93Wyd0aXRsZV9hciddOw0KICAgICAgICAgICAgICAgICR0aXRsZV9lbj0kcm93Wyd0aXRsZV9lbiddOw0KICANCiAgICAgICAgICAgICAgICAkZGV0YWlsc19hcj0kcm93WydkZXRhaWxzX2FyJ107DQogICAgICAgICAgICAgICAgJGRldGFpbHNfZW49JHJvd1snZGV0YWlsc19lbiddOw0KICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgJHNsaWRlaW1hZ2U9JHJvd1snc2xpZGVyX2ltYWdlJ107DQogICAgICAgICAgICAgICAgJGltZz0nPGltZyBzdHlsZT0iaGVpZ2h0OiA3NXB4OyIgc3JjPSIuLi8uLi8uLi91cGxvYWRzLycuJHNsaWRlaW1hZ2UuJyIgYWx0PSIiIHdpZHRoPSIxNTBweCIgaGlnaHQ9IjE1MHB4Ii8+JzsNCiAgICAgICAgICAgICAgICAkZWRpdFJvdz0nPGEgb25jbGljaz0iZ2V0RGF0YSgnLiRzbGlkZV9pZC4nKSIgaHJlZj0iIyI+PGkgY2xhc3M9Imljb24tZWRpdCBiaWdnZXItMTMwIj48L2k+PC9hPic7DQogICAgICAgICAgICAgICAgJGRlbGV0ZVJvdz0nPGEgb25jbGljaz0iZGVsZXRlX2RhdGEoJy4kc2xpZGVfaWQuJykiIGhyZWY9IiMiIGNsYXNzPSJkZWxldGUiPjxpIGNsYXNzPSJpY29uLXRyYXNoIGJpZ2dlci0xMzAiPjwvaT48L2E+JzsNCiAgICAgICAgICAgICAgICAkcmVzcG9uY2VbXT1hcnJheSggJGkrMSwkaW1nLCR0aXRsZV9hciwkdGl0bGVfZW4sJGRldGFpbHNfYXIsJGRldGFpbHNfZW4sJGVkaXRSb3csJGRlbGV0ZVJvdyk7DQogICAgICAgICAgICAgICAgJGkrKzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJHJlc3VsdHMgPSBbInNFY2hvIiA9PiAxLA0KICAgICAgICAJImlUb3RhbFJlY29yZHMiID0+IGNvdW50KCRyZXNwb25jZSksDQogICAgICAgIAkiaVRvdGFsRGlzcGxheVJlY29yZHMiID0+IGNvdW50KCRyZXNwb25jZSksDQogICAgICAgIAkiYWFEYXRhIiA9PiAkcmVzcG9uY2UgXTsNCiAgICAgICAgICAgIHJldHVybiAkcmVzdWx0czsNCiAgICAgICAgDQogICAgICAgIH0NCiAgICAgICAgY2F0Y2goUERPRXhjZXB0aW9uICRlKQ0KICAgICAgICB7DQogICAgICAgICAgICBlY2hvICRlLT5nZXRNZXNzYWdlKCk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiB1cGRhdGVEYXRhKCR0eSwkZWRpdF9pZCwkdGl0bGVfYXIsJHRpdGxlX2VuLCRkZXRhaWxzYXIsJGRldGFpbHNlbiwkZmlsZV9pbnNlcnQsJHNob3cpDQogICAgew0KICAgICAgICB0cnkNCiAgICAgICAgew0KDQoNCiAgICAgICAgICAgIGlmKCR0eT09MSl7DQogICAgICAgICAgICAkcXVlcnk9InVwZGF0ZSBzbGlkZXIgc2V0IHRpdGxlX2FyPSckdGl0bGVfYXInLHRpdGxlX2VuPSckdGl0bGVfZW4nLGRldGFpbHNfYXI9JyRkZXRhaWxzYXInLGRldGFpbHNfZW49JyRkZXRhaWxzZW4nLHNsaWRlcl9pbWFnZT0nJGZpbGVfaW5zZXJ0JyxzaG93X2RldGFpbHM9JyRzaG93JyB3aGVyZSBpZD0kZWRpdF9pZCI7DQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICRxdWVyeT0idXBkYXRlIHNsaWRlciBzZXQgdGl0bGVfYXI9JyR0aXRsZV9hcicsdGl0bGVfZW49JyR0aXRsZV9lbicsZGV0YWlsc19hcj0nJGRldGFpbHNhcicsZGV0YWlsc19lbj0nJGRldGFpbHNlbicsc2hvd19kZXRhaWxzPSckc2hvdycgd2hlcmUgaWQ9JGVkaXRfaWQiOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgJHN0bXQgPSAkdGhpcy0+ZGItPnByZXBhcmUoJHF1ZXJ5KTsNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQogICAgICAgICAgIA0KICAgICAgICAgICAgDQogICAgICAgICAgICAgcmV0dXJuICAkc3RtdDsNCiAgICAgICAgDQogICAgICAgIH0NCiAgICAgICAgY2F0Y2goUERPRXhjZXB0aW9uICRlKQ0KICAgICAgICB7DQogICAgICAgICAgICBlY2hvICRlLT5nZXRNZXNzYWdlKCk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBEZWxldGUoJGFjdElkKXsNCiAgICAgICAgdHJ5ew0KICAgICAgICAgICAgJHN0bXQgPSAkdGhpcy0+ZGItPnByZXBhcmUoIkRFTEVURSBGUk9NIHNsaWRlciBXSEVSRSBpZD06aWQiKTsNCiAgICAgICAgICAgICRzdG10LT5iaW5kUGFyYW0oJzppZCcsJGFjdElkLFBETzo6UEFSQU1fSU5UKTsNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgfWNhdGNoKFBET0V4Y2VwdGlvbiAkZSkNCiAgICAgICAgew0KICAgICAgICAgICAgZWNobyAkZS0+Z2V0TWVzc2FnZSgpOw0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0KDQo/Pg=="));