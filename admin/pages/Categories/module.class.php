<?php @eval("?>".base64_decode("PD9waHANCmlmIChzZXNzaW9uX3N0YXR1cygpID09IFBIUF9TRVNTSU9OX05PTkUpIHsNCiAgICBzZXNzaW9uX3N0YXJ0KCk7DQp9DQppbmNsdWRlX29uY2UgIi4uL2RiY29uZmlnLnBocCI7DQpjbGFzcyBNb2R1bGVDbGFzc3sNCiAgICBwcml2YXRlICRkYjsNCg0KICAgIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkNCiAgICB7DQogICAgICAgICR0aGlzLT5kYiA9IERhdGFiYXNlOjpjb25maWcoKTsNCiAgICAgIA0KICAgIH0NCiAgICBwdWJsaWMgZnVuY3Rpb24gQWRkKCR0aXRsZV9hciwkdGl0bGVfZW4pDQogICAgew0KICAgICAgICB0cnkNCiAgICAgICAgew0KDQogICAgICAgICAgICAkc3RtdCA9ICR0aGlzLT5kYi0+cHJlcGFyZSgiaW5zZXJ0IGludG8gIGNhdGVnb3JpZXMgKG5hbWVfYXIsbmFtZV9lbikgdmFsdWVzKCckdGl0bGVfYXInLCckdGl0bGVfZW4nKSIpOw0KICAgICAgICAgICAgJHN0bXQtPmV4ZWN1dGUoKTsNCiAgICAgICAgICAgIHJldHVybiAkc3RtdDsNCiAgICAgICAgfQ0KICAgICAgICBjYXRjaChQRE9FeGNlcHRpb24gJGUpDQogICAgICAgIHsNCiAgICAgICAgICAgIGVjaG8gJGUtPmdldE1lc3NhZ2UoKTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgfQ0KDQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0Um93QnlJZCgkaWQpDQogICAgew0KICAgICAgICB0cnkNCiAgICAgICAgew0KICAgICAgICAgICAgJHN0bXQgPSAkdGhpcy0+ZGItPnByZXBhcmUoIlNFTEVDVCAqIEZST00gY2F0ZWdvcmllcyBXSEVSRSBpZD06aWQiKTsNCgkJCSRzdG10LT5iaW5kUGFyYW0oJzppZCcsJGlkLFBETzo6UEFSQU1fSU5UKTsNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQogICAgICAgICAgICAkUm93ID0gJHN0bXQtPmZldGNoKFBETzo6RkVUQ0hfQVNTT0MpOw0KICAgICAgICAgICAgcmV0dXJuICRSb3c7DQoNCiAgICAgICAgDQogICAgICAgIH0NCiAgICAgICAgY2F0Y2goUERPRXhjZXB0aW9uICRlKQ0KICAgICAgICB7DQogICAgICAgICAgICBlY2hvICRlLT5nZXRNZXNzYWdlKCk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRBbGxEYXRhKCkNCiAgICB7DQogICAgICAgIHRyeQ0KICAgICAgICB7DQoNCiAgICAgICAgICAgICRyZXNwb25jZT0gYXJyYXkoKTsNCiAgICAgICAgICAgICRpPTA7DQogICAgICAgICAgICAkc3RtdCA9ICR0aGlzLT5kYi0+cHJlcGFyZSgic2VsZWN0ICogZnJvbSBjYXRlZ29yaWVzIG9yZGVyIGJ5IGlkIGRlc2MiKTsNCgkNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQoNCiAgICAgICAgICAgIHdoaWxlKCRyb3c9JHN0bXQtPmZldGNoKFBETzo6RkVUQ0hfQVNTT0MpKXsNCiAgICAgICAgICAgICAgICAkc2xpZGVfaWQ9JHJvd1snaWQnXTsNCiAgICAgICAgICAgICAgICAkdGl0bGVfYXI9JHJvd1snbmFtZV9hciddOw0KICAgICAgICAgICAgICAgICR0aXRsZV9lbj0kcm93WyduYW1lX2VuJ107DQogIA0KICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICRlZGl0Um93PSc8YSBvbmNsaWNrPSJnZXREYXRhKCcuJHNsaWRlX2lkLicpIiBocmVmPSIjIj48aSBjbGFzcz0iaWNvbi1lZGl0IGJpZ2dlci0xMzAiPjwvaT48L2E+JzsNCiAgICAgICAgICAgICAgICAkZGVsZXRlUm93PSc8YSBvbmNsaWNrPSJkZWxldGVfZGF0YSgnLiRzbGlkZV9pZC4nKSIgaHJlZj0iIyIgY2xhc3M9ImRlbGV0ZSI+PGkgY2xhc3M9Imljb24tdHJhc2ggYmlnZ2VyLTEzMCI+PC9pPjwvYT4nOw0KICAgICAgICAgICAgICAgICRyZXNwb25jZVtdPWFycmF5KCAkaSsxLCR0aXRsZV9hciwkdGl0bGVfZW4sJGVkaXRSb3csJGRlbGV0ZVJvdyk7DQogICAgICAgICAgICAgICAgJGkrKzsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgJHJlc3VsdHMgPSBbInNFY2hvIiA9PiAxLA0KICAgICAgICAJImlUb3RhbFJlY29yZHMiID0+IGNvdW50KCRyZXNwb25jZSksDQogICAgICAgIAkiaVRvdGFsRGlzcGxheVJlY29yZHMiID0+IGNvdW50KCRyZXNwb25jZSksDQogICAgICAgIAkiYWFEYXRhIiA9PiAkcmVzcG9uY2UgXTsNCiAgICAgICAgICAgIHJldHVybiAkcmVzdWx0czsNCiAgICAgICAgDQogICAgICAgIH0NCiAgICAgICAgY2F0Y2goUERPRXhjZXB0aW9uICRlKQ0KICAgICAgICB7DQogICAgICAgICAgICBlY2hvICRlLT5nZXRNZXNzYWdlKCk7DQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgIH0NCg0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiB1cGRhdGVEYXRhKCRlZGl0X2lkLCR0aXRsZV9hciwkdGl0bGVfZW4pDQogICAgew0KICAgICAgICB0cnkNCiAgICAgICAgew0KDQoNCiAgICAgICAgICANCiAgICAgICAgICAgICRxdWVyeT0idXBkYXRlIGNhdGVnb3JpZXMgc2V0IG5hbWVfYXI9JyR0aXRsZV9hcicsbmFtZV9lbj0nJHRpdGxlX2VuJyB3aGVyZSBpZD0kZWRpdF9pZCI7DQogICAgICAgICAgDQogICAgICAgICAgICAkc3RtdCA9ICR0aGlzLT5kYi0+cHJlcGFyZSgkcXVlcnkpOw0KICAgICAgICAgICAgJHN0bXQtPmV4ZWN1dGUoKTsNCiAgICAgICAgICAgDQogICAgICAgICAgICANCiAgICAgICAgICAgICByZXR1cm4gICRzdG10Ow0KICAgICAgICANCiAgICAgICAgfQ0KICAgICAgICBjYXRjaChQRE9FeGNlcHRpb24gJGUpDQogICAgICAgIHsNCiAgICAgICAgICAgIGVjaG8gJGUtPmdldE1lc3NhZ2UoKTsNCiAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgfQ0KDQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIERlbGV0ZSgkYWN0SWQpew0KICAgICAgICB0cnl7DQoNCiAgICAgICAgICAgICRzdG10MSA9ICR0aGlzLT5kYi0+cHJlcGFyZSgiU0VMRUNUICogRlJPTSBwcm9kdWN0cyBXSEVSRSBjYXRfaWQ9JyRhY3RJZCcgIik7DQoNCiAgICAgICAgICAgICRzdG10MS0+ZXhlY3V0ZSgpOw0KICAgICAgICAgICAgJGNvdW50ID0gJHN0bXQxLT5yb3dDb3VudCgpOw0KICAgICAgICAgDQoNCiAgICAgICAgICAgIGlmKCRjb3VudD09MCl7DQogICAgICAgICAgICAkc3RtdCA9ICR0aGlzLT5kYi0+cHJlcGFyZSgiREVMRVRFIEZST00gY2F0ZWdvcmllcyBXSEVSRSBpZD06aWQiKTsNCiAgICAgICAgICAgICRzdG10LT5iaW5kUGFyYW0oJzppZCcsJGFjdElkLFBETzo6UEFSQU1fSU5UKTsNCiAgICAgICAgICAgICRzdG10LT5leGVjdXRlKCk7DQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfWNhdGNoKFBET0V4Y2VwdGlvbiAkZSkNCiAgICAgICAgew0KICAgICAgICAgICAgZWNobyAkZS0+Z2V0TWVzc2FnZSgpOw0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KDQoNCiAgICANCiAgICBwdWJsaWMgZnVuY3Rpb24gZ2V0X2FsbF9jYXRlZ29yaWVzX29wdGlvbnMoKXsNCiAgICAgICAgdHJ5ew0KICAgICAgICAgICAgJHN0bXQgPSAkdGhpcy0+ZGItPnByZXBhcmUoInNlbGVjdCBpZCxuYW1lX2FyIGZyb20gY2F0ZWdvcmllcyIpOw0KICAgICAgICAgICAgJHN0bXQtPmV4ZWN1dGUoKTsNCiAgICAgICAgICAgICRvcHRpb25zPSI8b3B0aW9uIHZhbHVlPScwJyBzZWxlY3RlZCA+2KfYrtiq2LE8L29wdGlvbj4iOw0KICAgICAgICAgICAgd2hpbGUoJHJvdz0kc3RtdC0+ZmV0Y2goUERPOjpGRVRDSF9BU1NPQykpew0KICAgICAgICAgICAgICAgICRvcHRpb25zLj0iPG9wdGlvbiB2YWx1ZT0nJHJvd1tpZF0nID4kcm93W25hbWVfYXJdPC9vcHRpb24+IjsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHJldHVybiAkb3B0aW9uczsNCiAgICAgICAgfWNhdGNoKFBET0V4Y2VwdGlvbiAkZSkNCiAgICAgICAgew0KICAgICAgICAgICAgZWNobyAkZS0+Z2V0TWVzc2FnZSgpOw0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOw0KICAgICAgICB9DQogICAgfQ0KfQ0KDQo/Pg=="));